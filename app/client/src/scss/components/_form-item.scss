@use 'sass:math';
@use '@/scss/abstract' as *;

.asteriks {
  color: $c-red;
}

.form-wrapper {
  margin: 0 auto;

  &--medium {
    max-width: 800px;
  }
}

.form-item {
  @extend %with-reset-button;

  .input-group-text {
    color: $white;
    border: $f-v-border-width solid $c-primary-dark;
    background-color: $c-grey-neutral;
    border-radius: $f-v-border-radius;

    @each $side, $child in (left: last-child, right: first-child) {
      &:#{$child} {
        border-#{$side}-width: math.div($f-v-border-width, 2);
      }
    }
  }

  &.multivalued {
    > .item {
      &:not(:last-of-type) {
        margin-bottom: 1rem;
      }

      > .field {
        display: flex;
        column-gap: 1.5rem;
      }
    }
  }

  &.checkable {
    .label {
      margin-bottom: 0;
    }

    .field {
      display: flex;
      align-items: center;
      column-gap: 0.5rem;
    }
  }

  &.touched.has-error {
    .label {
      color: $c-red;
    }

    .form-input,
    .input-number-values {
      border-color: $c-red;
    }

    .btn--error {
      background-color: $c-red;
      border-color: $c-red;
    }
  }

  .description,
  .error,
  {
    margin: .5rem 0;
    font-size: .8rem;
  }

  .error {
    color: $c-red;

    span {
      display: block;
    }
  }

  .form-input {
    outline: none;
    @extend %form-typo;

    &:not([type=checkbox], [type=radio]) {
      display: block;
      @extend %form-input;
    }

    &[type=radio] {
      @include same(1.125rem, width, height, min-width, min-height, background-size);
      cursor: pointer;
    }

    &[type=checkbox] {
      appearance: none;
      height: 1.125rem;
      width: 1.125rem;
      background-size: 1.125rem;
      background-color: $white;
      background-repeat: no-repeat;
      background-position: center;
      border: 1px solid $c-blue;
      border-radius: 4px;

      &:checked {
        border-color: $c-blue;
        background-color: $c-blue;
        background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16'%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5 6.5 11 12 5.5'/%3E%3C/svg%3E");
      }

      &:focus {
        outline: 0;
      }

      &:disabled {
        border-color: $c-gray-disabled;

        &:checked {
          background-color: $c-gray-disabled;
        }
      }
    }

    &--date {
      // Fix Dates input heigh in Safari.
      max-height: 48px;
    }

    &--select {
      cursor: pointer;
    }

    &.input-radio {
      appearance: none;
      border-radius: 50%;
      box-shadow: inset 0 0 0 3px $white;
      background-image: none !important;
      background-color: $white;
      transition: background-color .15s ease;
      display: block;
      border: 1px solid $c-primary;

      &:checked {
        background-color: $c-primary;
      }

      &:disabled {
        border-color: $c-gray-disabled;

        &:checked {
          background-color: $c-gray-disabled;
        }
      }
    }

    &.form-input--textarea {
      border-radius: 1.25rem;
      resize: none;
    }

    &:read-only {
      background-color: rgba($white, .5);
      border-color: $c-gray-disabled-light;

      &:focus {
        border-color: rgba($c-orange, .5);
      }
    }
  }

  .input-inline {
    display: inline-flex;
  }

  .input-radio-wrapper,
  .input-checkbox-wrapper {
    display: inline-flex;
    align-items: center;
    gap: .5rem;
    margin-bottom: .25rem;

    &:not(.disabled) {
      cursor: pointer;
    }

    &.disabled {
      color: $c-gray-disabled;
    }
  }

  .form-input--number {
    appearance: none;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      appearance: none;
    }
  }

  .label {
    @extend %form-typo;
    margin-bottom: .25rem;

    &[for] {
      cursor: pointer;
    }
  }

  &.required {
    .label::after {
      content: '*';
      color: $c-red;
    }
  }

  &:not(.required) {
    &[hideoptional="true"] {
      display: none;
    }
  }

  .invalid {
    .vs__search,
    .form-input,
    {
      border-color: $c-red;
    }

    .error {
      color: $c-red;
    }
  }

  &.disabled {
    .label {
      cursor: default;
    }

    &.checkable .label,
    .vs__search,
    .form-input,
    {
      cursor: not-allowed;
      color: $c-gray-dark;
      border-color: $c-gray-disabled;
      background-color: transparent;
    }
  }

  .note {
    margin-top: .5rem;
    margin-bottom: 0;
  }
}

.input-checkbox-label {
  display: flex;
  height: 100%;
  align-items: center;
  gap: .5rem;
  text-transform: capitalize;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.5;
  letter-spacing: $ls-default;
  color: $c-dark;
  cursor: pointer;
}

.input-checkbox {
  appearance: none;
  height: 1.125rem;
  width: 1.125rem;
  background-size: 1.125rem;
  background-color: $white;
  background-repeat: no-repeat;
  background-position: center;
  border: 2px solid $c-gray-disabled-light;
  border-radius: 4px;

  &:checked {
    border-color: $c-primary;
    background-color: $c-primary;
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16'%3E%3Cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8.5 6.5 11 12 5.5'/%3E%3C/svg%3E");
  }

  &:focus {
    outline: 0;
  }
}
